# .bashrc

# set terminal to 256 colors if available
if [ -e /usr/share/terminfo/x/xterm-256color ]; then
        export TERM='xterm-256color'
else
        export TERM='xterm'
fi

# don't put duplicate lines in the history. See bash(1) for more options
# # ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# Set HISTSIZE and HISTFILESIZE to an empty value as we append and love our history :)
# unset isn't working. It will be reset to 500 everytime!
export HISTSIZE=
export HISTFILESIZE=

# Save history immediatly after running command
# With "history -n" it's possible to read all new lines since last read
PROMPT_COMMAND="history -a"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Change behavior of __git_ps1
#export GIT_PS1_SHOWDIRTYSTATE=yes
#export GIT_PS1_SHOWSTASHSTATE=yes
#export GIT_PS1_SHOWUNTRACKEDFILES=yes


# Enable color prompt
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
  PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \$ '
else
  PS1='\u@\h:\w$ \$ '
fi

# User specific aliases and functions
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias tailf='tail -F'
alias ll='ls -al'
alias df='df -h'
alias ..='cd ..'
alias vi='vim'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias mkdir='mkdir -p'

# Set to 'C' to make ls sort dotfiles
export LC_COLLATE=C

# Set to UTF-8 and english locale
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# Set the right editor
vim="$(which vim)"
if [ -x "${vim}" ]; then
  export EDITOR="${vim}"
  alias vi=$EDITOR
fi

function fawk {
  first="awk '{print "
  last="}'"
  cmd="${first}\$${1}${last}"
  eval $cmd
}

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

GIT_PROMPT_ONLY_IN_REPO=0
GIT_PROMPT_THEME=Custom

if [ -f ~/.bash-git-prompt/gitprompt.sh ]; then
  source ~/.bash-git-prompt/gitprompt.sh
fi

